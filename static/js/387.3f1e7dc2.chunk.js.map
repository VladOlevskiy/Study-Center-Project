{"version":3,"file":"static/js/387.3f1e7dc2.chunk.js","mappings":"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","sources":["components/Workers/WorkersMedia/WorkersMedia-styled.jsx","components/Workers/WorkersMedia/WorkersMedia.jsx","components/Workers/WorkersInfoDetails/WorkersInfoDetails-styled.jsx","components/Workers/WorkersInfoDetails/WorkersInfoDetails.jsx","pages/WorkerDetailsPage/WorkerDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const Section = styled(motion.section)`\n  padding-top: 90px;\n  padding-bottom: 90px;\n  background-color: ${p => p.theme.colors.backgroundThird};\n`;\n\nexport const Title = styled(motion.h2)`\n  color: white;\n  text-align: center;\n  font-size: 30px;\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n`;\n\nexport const List = styled.ul`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const Item = styled(motion.li)`\n  width: auto;\n  border-radius: 2px;\n  transition: scale 250ms ease-in-out;\n  &:hover {\n    scale: 1.05;\n  }\n  @media screen and (max-width: 767px) {\n    &:not(last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  cursor: pointer;\n  @media screen and (max-width: 767px) {\n    max-width: 100%;\n    height: auto;\n  }\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 300px;\n    object-fit: contain;\n  }\n`;\n","import React, { useState } from 'react';\nimport FsLightbox from 'fslightbox-react';\nimport { Container } from 'styles/Container-styled';\nimport { Section, Title, List, Item, Img } from './WorkersMedia-styled';\n\nconst TextAnimationUp = {\n  offscreen: {\n    y: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.3,\n    duration: 3,\n  },\n};\n\nconst TextAnimationLeft = {\n  offscreen: {\n    x: -300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.3,\n    duration: 3,\n  },\n};\nconst WorkersMedia = ({ data }) => {\n  const [lightboxController, setLightboxController] = useState({\n    toggler: false,\n    slide: 1,\n  });\n  const openLightboxOnSlide = number => {\n    setLightboxController({\n      toggler: !lightboxController.toggler,\n      slide: number,\n    });\n  };\n  let aa = [];\n\n  return (\n    <Section\n      initial={'offscreen'}\n      whileInView={'onscreen'}\n      viewport={{ once: true, amount: 0.3 }}\n      transition={{ staggerChildren: 0.3 }}\n      style={{ overflow: 'hidden' }}\n    >\n      <Container>\n        <Title variants={TextAnimationLeft}>Сертифікати:</Title>\n        <List>\n          {data &&\n            data.diplomas.map((photo, index) => {\n              aa.push(process.env.PUBLIC_URL + `${photo}`);\n              return (\n                <Item\n                  id={index}\n                  variants={TextAnimationUp}\n                  onClick={() => openLightboxOnSlide(index + 1)}\n                >\n                  <Img src={process.env.PUBLIC_URL + `${photo}`} alt=\"\" />\n                </Item>\n              );\n            })}\n        </List>\n        {data && (\n          <FsLightbox\n            toggler={lightboxController.toggler}\n            sources={aa}\n            slide={lightboxController.slide}\n          />\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default WorkersMedia;\n","import styled from 'styled-components';\nimport { workers_img } from 'media';\nimport { ImCheckmark2 } from 'react-icons/im';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding-top: 120px;\n  padding-bottom: 120px;\n  background-image: linear-gradient(\n      to right bottom,\n      rgb(255 255 255 / 30%),\n      rgb(0 0 0 / 69%)\n    ),\n    url(${workers_img});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: visible;\n  height: 600px;\n`;\n\nexport const WrapperMain = styled(motion.div)`\n  margin-top: 70px;\n  @media screen and (min-width: 768px) {\n    margin-top: 215px;\n    display: flex;\n    height: 100%;\n    justify-content: space-around;\n    align-items: center;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 275px;\n  }\n`;\nexport const WrapperTitle = styled(motion.div)`\n  text-align: center;\n  margin-bottom: 30px;\n  @media screen and (min-width: 768px) {\n    height: 70px;\n    margin-bottom: 0px;\n    margin-right: 10px;\n  }\n`;\nexport const WrapperText = styled(motion.div)`\n  height: auto;\n  background-color: white;\n  width: 100%;\n  padding: 35px 30px;\n  background: rgb(255 255 255 / 7%);\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 4px 30px;\n  backdrop-filter: blur(8px);\n  border-radius: 30px;\n  @media screen and (min-width: 768px) {\n    width: 80%;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: white;\n  text-alight: center;\n  font-size: 35px;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.6);\n`;\n\nexport const TitleEducation = styled(motion.h3)`\n  font-size: 27px;\n  color: white;\n  letter-spacing: 1.4px;\n  text-align: center;\n  margin-bottom: 15px;\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const TextEducation = styled(motion.p)`\n  font-size: 17px;\n  color: #ffffff;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  margin-bottom: 15px;\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const TextExperience = styled(motion.p)`\n  font-size: 24px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.white};\n  font-weight: 800;\n  text-align: end;\n`;\n\nexport const SectionWork = styled.section`\n  background-color: ${p => p.theme.colors.backgroundSecond};\n  padding-bottom: 60px;\n\n  @media screen and (max-width: 767px) {\n    padding-top: 60px;\n  }\n  @media screen and (min-width: 768px) {\n    padding-top: 60px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 150px;\n    padding-bottom: 110px;\n  }\n`;\n\nexport const WrapperMainWork = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  flex-direction: column-reverse;\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n  }\n`;\n\nexport const WrapperListWork = styled(motion.div)`\n  @media screen and (min-width: 1280px) {\n    margin-right: 25px;\n  }\n`;\n\nexport const TitleWork = styled(motion.h2)`\n  font-size: 30px;\n  letter-spacing: 1.4px;\n  text-align: center;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n`;\nexport const ListWork = styled.ul``;\nexport const ItemWork = styled(motion.li)`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  padding-bottom: 1px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport const ItemText = styled.p`\n  @media screen and (min-width: 768px) {\n    font-size: 19px;\n  }\n`;\nexport const Img = styled(motion.img)`\n  margin-bottom: 30px;\n  @media screen and (max-width: 767px) {\n    max-width: 100%;\n  }\n  @media screen and (min-width: 768px) {\n    width: 500px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 550px;\n    margin-bottom: 0px;\n  }\n`;\n\nexport const IconListItem = styled(ImCheckmark2)`\n  width: 20px;\n  height: 20px;\n  margin-right: 15px;\n  fill: rgb(255, 255, 255);\n  color: black;\n  flex-shrink: 0;\n  line-height: 1.3;\n  @media screen and (min-width: 768px) {\n    width: 25px;\n    height: 25px;\n  }\n`;\nexport const AmountPatients = styled.p`\n  color: ${p => p.theme.colors.backgroundThird};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: end;\n  margin-right: 10px;\n  margin-left: 10px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  font-style: italic;\n`;\n\nexport const SectionStudy = styled(motion.section)`\n  padding-top: 60px;\n  padding-bottom: 60px;\n  background-color: ${p => p.theme.colors.backgroundMain};\n`;\nexport const TitleStudy = styled(motion.h2)`\n  font-size: 32px;\n  color: white;\n  letter-spacing: 1.4px;\n  text-align: center;\n  margin-bottom: 30px;\n`;\nexport const TextStudy = styled(motion.p)`\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ButtonLink = styled(Link)`\n  font-size: 19px;\n  display: flex;\n  margin-top: 10px;\n  width: 145px;\n  height: 50px;\n  padding: 12px;\n  border-radius: 20px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${p => p.theme.colors.backgroundSecond};\n  transition: background-color 300ms, scale 300ms;\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.backgroundMain};\n    scale: 1.15;\n  }\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\n    height: 40px;\n    font-size: 17px;\n  }\n`;\n","import { Container } from 'styles/Container-styled';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport WorkersMedia from '../WorkersMedia/WorkersMedia';\nimport { motion } from 'framer-motion';\n\nimport {\n  Section,\n  WrapperMain,\n  WrapperTitle,\n  WrapperText,\n  Title,\n  TextEducation,\n  TitleEducation,\n  TextExperience,\n  SectionWork,\n  WrapperMainWork,\n  WrapperListWork,\n  TitleWork,\n  ListWork,\n  ItemWork,\n  ItemText,\n  Img,\n  IconListItem,\n  AmountPatients,\n  SectionStudy,\n  TitleStudy,\n  TextStudy,\n  ButtonLink,\n} from './WorkersInfoDetails-styled';\n\nconst TextAnimationUp = {\n  offscreen: {\n    y: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nconst TextAnimationRight = {\n  offscreen: {\n    x: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nconst TextAnimationLeft = {\n  offscreen: {\n    x: -300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nconst ProductDetails = ({ id }) => {\n  const [worker, setWorker] = useState(null);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // setLoading(true);\n        const response = await axios.get(\n          '/Study-Center-Project/workersData.json'\n        );\n        const data = response.data;\n        const workerData = data.filter(worker => {\n          return worker.id === Number(id);\n        });\n        console.log(workerData);\n        setWorker(workerData);\n        // setLoading(false);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n    fetchData();\n  }, [id]);\n  return (\n    <>\n      <Section style={{ overflow: 'hidden' }}>\n        <Container>\n          {worker && (\n            <WrapperMain\n              initial={'offscreen'}\n              whileInView={'onscreen'}\n              viewport={{ once: true, amount: 0.5 }}\n              transition={{ staggerChildren: 0.35 }}\n            >\n              <WrapperTitle variants={TextAnimationLeft}>\n                <Title>{worker[0].fullName}</Title>\n                <ButtonLink to=\"/mentors\">Назад</ButtonLink>\n              </WrapperTitle>\n              <WrapperText variants={TextAnimationRight}>\n                <TitleEducation>Освіта:</TitleEducation>\n                <TextEducation>{worker[0].education}</TextEducation>\n                <TextExperience>{worker[0].experience} досвіду</TextExperience>\n              </WrapperText>\n            </WrapperMain>\n          )}\n        </Container>\n      </Section>\n      <SectionWork>\n        <Container>\n          <WrapperMainWork>\n            {worker && (\n              <>\n                <WrapperListWork\n                  initial={'offscreen'}\n                  whileInView={'onscreen'}\n                  viewport={{ once: true, amount: 0.3 }}\n                  transition={{ staggerChildren: 0.3 }}\n                >\n                  <TitleWork variants={TextAnimationLeft}>\n                    Інформація про фахівця:\n                  </TitleWork>\n                  <ListWork>\n                    {worker[0].practice.map((item, index) => {\n                      return (\n                        <ItemWork id={index} variants={TextAnimationLeft}>\n                          <IconListItem />\n                          <ItemText>{item}</ItemText>\n                          {index === 1 && (\n                            <AmountPatients>\n                              Понад {worker[0].patientsAmount} пацієнтів на рік.\n                            </AmountPatients>\n                          )}\n                        </ItemWork>\n                      );\n                    })}\n                  </ListWork>\n                </WrapperListWork>\n                <motion.div\n                  initial={'offscreen'}\n                  whileInView={'onscreen'}\n                  viewport={{ once: true, amount: 0.3 }}\n                  transition={{ staggerChildren: 0.35 }}\n                >\n                  <Img\n                    variants={TextAnimationUp}\n                    src={process.env.PUBLIC_URL + `${worker[0].photo}`}\n                  />\n                </motion.div>\n              </>\n            )}\n          </WrapperMainWork>\n        </Container>\n      </SectionWork>\n      <SectionStudy\n        initial={'offscreen'}\n        whileInView={'onscreen'}\n        viewport={{ once: false, amount: 0.2 }}\n        transition={{ staggerChildren: 0.5 }}\n      >\n        <Container>\n          <TitleStudy variants={TextAnimationLeft}>\n            Підвищення кваліфікації / навчання\n          </TitleStudy>\n          {worker && (\n            <TextStudy variants={TextAnimationRight}>\n              {worker[0].study}\n            </TextStudy>\n          )}\n        </Container>\n      </SectionStudy>\n      {worker && <WorkersMedia data={worker[0]} />}\n    </>\n  );\n};\n\nexport default ProductDetails;\n","import WorkersInfoDetails from 'components/Workers/WorkersInfoDetails/WorkersInfoDetails';\n// import { AnimatePresence } from 'framer-motion';\n// import { motion } from 'framer-motion';\nimport { useParams } from 'react-router-dom';\n\nconst WorkerDetailsPage = () => {\n  const { workerId } = useParams();\n  return (\n    <>\n      <WorkersInfoDetails id={workerId} />\n    </>\n  );\n};\n\nexport default WorkerDetailsPage;\n"],"names":["Section","styled","motion","p","theme","colors","backgroundThird","Title","List","Item","Img","TextAnimationUp","offscreen","y","opacity","onscreen","transition","type","bounce","duration","TextAnimationLeft","x","data","useState","toggler","slide","lightboxController","setLightboxController","aa","initial","whileInView","viewport","once","amount","staggerChildren","style","overflow","variants","diplomas","map","photo","index","push","process","id","onClick","number","src","alt","sources","workers_img","WrapperMain","WrapperTitle","WrapperText","TitleEducation","TextEducation","TextExperience","white","SectionWork","backgroundSecond","WrapperMainWork","WrapperListWork","TitleWork","ListWork","ItemWork","ItemText","IconListItem","ImCheckmark2","AmountPatients","SectionStudy","backgroundMain","TitleStudy","TextStudy","ButtonLink","Link","TextAnimationRight","worker","setWorker","useEffect","axios","response","workerData","filter","Number","console","log","Error","fetchData","fullName","to","education","experience","practice","item","patientsAmount","study","workerId","useParams","WorkersInfoDetails"],"sourceRoot":""}