{"version":3,"file":"static/js/721.272dc80c.chunk.js","mappings":"wQAAO,IAAMA,EAAoB,CAC/BC,UAAW,CACTC,EAAG,IACHC,QAAS,GAEXC,SAAU,CACRF,EAAG,EACHC,QAAS,EACTE,WAAY,CAAEC,KAAM,UACpBC,OAAQ,IACRC,SAAU,IAGDC,EAAkB,CAC7BR,UAAW,CACTC,GAAI,IACJC,QAAS,GAEXC,SAAU,CACRF,EAAG,EACHC,QAAS,EACTE,WAAY,CAAEC,KAAM,UACpBC,OAAQ,GACRC,SAAU,IAIDE,EAAoB,CAC/BT,UAAW,CACTU,EAAG,IACHR,QAAS,GAEXC,SAAU,CACRO,EAAG,EACHR,QAAS,EACTE,WAAY,CAAEC,KAAM,UACpBC,OAAQ,GACRC,SAAU,IA4BDI,EAAuB,CAClCX,UAAW,CACTE,QAAS,GAEXC,SAAU,CACRD,QAAS,EACTE,WAAY,CAAEG,SAAU,KAGfK,EAA4B,CACvCC,OAAQ,CACNX,QAAS,GAEXY,QAAS,SAAAC,GAAM,MAAK,CAClBb,QAAS,EACTE,WAAY,CAAEY,MAAgB,GAATD,EAAcR,SAAU,GAFhC,E,oMC1EJU,EAAUC,EAAAA,GAAAA,QAAH,iZAgBPC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,EAAAA,GAAPF,CAAH,2VAcJG,EAAcH,EAAAA,GAAAA,IAAH,saAiBXI,EAAMJ,EAAAA,GAAAA,IAAH,iPAYHK,GAAOL,EAAAA,EAAAA,IAAOE,EAAAA,EAAAA,GAAPF,CAAH,4cAULG,EAAuBA,GAWtBG,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,sBAERQ,EAAaR,EAAAA,GAAAA,IAAH,oEAKVS,EAAeT,EAAAA,GAAAA,GAAH,kE,mBChCzB,EA3CuB,WACrB,OAAkCU,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAG2BC,EAAAA,EAAAA,IAAU,kBAHrC,OAGUC,EAHV,OAIUC,EAAOD,EAASC,KACtBJ,EAAaI,GALjB,sDAQU,IAAIC,MAAJ,MARV,0DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,IACHC,QAAQC,IAAIT,IAEV,SAACZ,EAAD,WACE,SAAC,IAAD,WACE,SAACE,EAAD,CAAMoB,QAAS,YAAaC,QAAS,WAArC,SACGX,GACCA,EAAUY,KAAI,SAAAC,GAAQ,OACpB,SAACnB,EAAD,CAAMoB,SAAUhC,EAAAA,GAAhB,UACE,SAACa,EAAD,CAAUoB,GAAE,UAAKF,EAASG,IAA1B,UACE,UAACnB,EAAD,YACE,SAACJ,EAAD,CACEwB,IAAKC,wBAAA,UAA4BL,EAASM,QAC1CC,IAAI,qBAEN,SAAC5B,EAAD,WACE,SAACM,EAAD,UAAee,EAASQ,eATZ,SAmBjC,EC/CD,EARoB,WAClB,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["animations/animation.jsx","components/Gallery/GalleryNavList/GalleryNavList-styled.jsx","components/Gallery/GalleryNavList/GalleryNavList.jsx","pages/GalleryPage/GalleryPage.jsx"],"sourcesContent":["export const TextAnimationDawn = {\n  offscreen: {\n    y: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.01,\n    duration: 1,\n  },\n};\nexport const TextAnimationUp = {\n  offscreen: {\n    y: -300,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nexport const TextAnimationLeft = {\n  offscreen: {\n    x: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nexport const TextAnimationRight = {\n  offscreen: {\n    x: -300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 3,\n  },\n};\n\nexport const TextAnimationZoom = {\n  offscreen: {\n    opacity: 0,\n  },\n  onscreen: {\n    opacity: 1,\n    transition: { duration: 0.8 },\n  },\n};\n\nexport const TextAnimationOpacity = {\n  offscreen: {\n    opacity: 0,\n  },\n  onscreen: {\n    opacity: 1,\n    transition: { duration: 2 },\n  },\n};\nexport const TextAnimationOpacityDelay = {\n  hidden: {\n    opacity: 0,\n  },\n  visible: custom => ({\n    opacity: 1,\n    transition: { delay: custom * 0.3, duration: 1 },\n  }),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nexport const Section = styled.section`\n  padding-top: 150px;\n  padding-bottom: 350px;\n  background: #8e9eab; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #eef2f3,\n    #8e9eab\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #eef2f3,\n    #8e9eab\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n`;\n\nexport const List = styled(motion.ul)`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\nexport const WrapperText = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  bottom: 0px;\n  left: 0px;\n  opacity: 0;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.22);\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 4px 30px;\n  backdrop-filter: blur(2px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: translateY(101%);\n  transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const Img = styled.img`\n  cursor: pointer;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  @media screen and (max-width: 767px) {\n    max-height: 500px;\n  }\n  @media screen and (min-width: 768px) {\n    max-height: 550px;\n  }\n`;\nexport const Item = styled(motion.li)`\n  width: auto;\n  border-radius: 2px;\n  transition: all 450ms ease-in-out;\n  &:hover,\n  &:focus {\n    scale: 0.93;\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n  &:hover ${WrapperText},&:focus ${WrapperText} {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  @media screen and (max-width: 767px) {\n    &:not(last-child) {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nexport const ItemLink = styled(Link)``;\n\nexport const WrapperImg = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const TextCategory = styled.h2`\n  color: #ffffff;\n  text-align: center;\n`;\n","import { Container } from 'styles/Container-styled';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport {\n  Section,\n  List,\n  Item,\n  ItemLink,\n  WrapperImg,\n  Img,\n  WrapperText,\n  TextCategory,\n} from './GalleryNavList-styled';\nimport { TextAnimationOpacity } from '../../../animations/animation';\n\nconst GalleryNavList = () => {\n  const [mediaData, setMediaData] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // setLoading(true);\n        const response = await axios.get('mediaData.json');\n        const data = response.data;\n        setMediaData(data);\n        // setLoading(false);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n    fetchData();\n  }, []);\n  console.log(mediaData);\n  return (\n    <Section>\n      <Container>\n        <List initial={'offscreen'} animate={'onscreen'}>\n          {mediaData &&\n            mediaData.map(category => (\n              <Item variants={TextAnimationOpacity}>\n                <ItemLink to={`${category.id}`}>\n                  <WrapperImg>\n                    <Img\n                      src={process.env.PUBLIC_URL + `${category.avatar}`}\n                      alt=\"photo of worker\"\n                    />\n                    <WrapperText>\n                      <TextCategory>{category.name}</TextCategory>\n                    </WrapperText>\n                  </WrapperImg>\n                </ItemLink>\n              </Item>\n            ))}\n        </List>\n      </Container>\n    </Section>\n  );\n};\n\nexport default GalleryNavList;\n","import GalleryNavList from '../../components/Gallery/GalleryNavList/GalleryNavList';\n\nconst GalleryPage = () => {\n  return (\n    <>\n      <GalleryNavList />\n    </>\n  );\n};\n\nexport default GalleryPage;\n"],"names":["TextAnimationDawn","offscreen","y","opacity","onscreen","transition","type","bounce","duration","TextAnimationUp","TextAnimationLeft","x","TextAnimationOpacity","TextAnimationOpacityDelay","hidden","visible","custom","delay","Section","styled","List","motion","WrapperText","Img","Item","ItemLink","Link","WrapperImg","TextCategory","useState","mediaData","setMediaData","useEffect","axios","response","data","Error","fetchData","console","log","initial","animate","map","category","variants","to","id","src","process","avatar","alt","name"],"sourceRoot":""}