{"version":3,"file":"static/js/137.61dfd1e5.chunk.js","mappings":"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","sources":["components/Workers/WorkersListMailInfo/WorkersListMainInfo-styled.jsx","components/Workers/WorkersListMailInfo/WorkersListMainInfo.jsx","components/Workers/Workers-styled.jsx","components/Workers/Workers.jsx","pages/MentorsPage/MentorsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nexport const Section = styled(motion.section)`\n  background-color: ${p => p.theme.colors.backgroundThird};\n  padding-top: 40px;\n  padding-bottom: 150px;\n`;\n\nexport const Title = styled(motion.h2)`\n  font-size: 30px;\n  font-weight: 900;\n  letter-spacing: 1.4px;\n  color: white;\n  text-align: center;\n  margin-bottom: 35px;\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n  }\n`;\n\nexport const List = styled(motion.ul)``;\nexport const Item = styled(motion.li)`\n  display: flex;\n  justify-content: flex-start;\n  &:not(:last-child) {\n    margin-bottom: 200px;\n  }\n  @media screen and (max-width: 767px) {\n    transform: scaleX(1) !important;\n    justify-content: center;\n    margin-bottom: 200px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    &:not(:last-child) {\n      margin-bottom: 100px;\n    }\n  }\n`;\n// export const WrapperMain = styled.div`\n//   position: relative;\n//   background-color: white;\n//   margin-left: auto;\n//   margin-right: auto;\n// `;\nexport const WrapperTextInfo = styled(motion.div)`\n  position: absolute;\n  top: 50%;\n  left: 0px;\n  display: flex;\n  color: white;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 350px;\n  transform: translate(92%, -50%);\n  padding: 35px;\n  background: rgb(255 255 255 / 12%);\n  box-shadow: rgb(0 0 0 / 15%) 0px 4px 30px;\n  backdrop-filter: blur(32px);\n  border-radius: 30px;\n  @media screen and (max-width: 767px) {\n    top: 55%;\n    min-height: 300px;\n    transform: translate(0%, 0%) !important;\n    top: 95%;\n    max-width: 100%;\n    padding: 15px;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 95%;\n    min-height: 350px;\n  }\n  @media screen and (min-width: 1280px) {\n    min-width: 600px;\n  }\n`;\nexport const WrapperPhotoInfo = styled(motion.div)`\n  position: relative;\n  /* margin-left: 100px; */\n  @media screen and (max-width: 767px) {\n    margin-bottom: 230px;\n  }\n`;\nexport const FullNameText = styled(motion.h3)`\n  font-size: 30px;\n  margin-bottom: 40px;\n  text-align: center;\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\n    font-size: 27px;\n    margin-bottom: 15px;\n  }\n`;\nexport const MainInfoText = styled(motion.p)`\n  font-size: 19px;\n  margin-bottom: 30px;\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\n    font-size: 17px;\n    margin-bottom: 15px;\n  }\n`;\nexport const ExperienceText = styled(motion.p)`\n  font-size: 18px;\n  color: rgb(255 139 0);\n  text-transform: uppercase;\n  font-weight: 600;\n  text-align: end;\n  margin-top: 10px;\n  @media screen and (max-width: 767px) {\n    font-size: 17px;\n    text-align: end !important;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    font-size: 17px;\n  }\n`;\nexport const LinkToDetailInfo = styled(Link)`\n  font-size: 19px;\n  display: flex;\n  width: 145px;\n  height: 50px;\n  padding: 12px;\n  border-radius: 20px;\n  align-items: center;\n  justify-content: center;\n  background-color: ${p => p.theme.colors.backgroundSecond};\n  transition: background-color 300ms, scale 300ms;\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.backgroundMain};\n    scale: 1.15;\n  }\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\n    height: 40px;\n    font-size: 17px;\n  }\n`;\nexport const Photo = styled(motion.img)`\n  /* height: 650px; */\n  @media screen and (max-width: 767px) {\n    max-width: 100%;\n    height: auto;\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    /* height: 400px; */\n    width: 400px;\n    height: auto;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    height: auto;\n  }\n`;\n","import { Container } from 'styles/Container-styled';\n// import aa from '../../../../public/ex.jpg';\nimport { motion } from 'framer-motion';\n\nimport {\n  Section,\n  Title,\n  List,\n  Item,\n  WrapperTextInfo,\n  WrapperPhotoInfo,\n  Photo,\n  FullNameText,\n  MainInfoText,\n  ExperienceText,\n  LinkToDetailInfo,\n} from './WorkersListMainInfo-styled';\n\nconst TextAnimation = {\n  offscreen: {\n    y: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 5,\n  },\n};\nconst TextAnimation1 = {\n  offscreen: {\n    x: 300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 1,\n  },\n};\nconst TextAnimation2 = {\n  offscreen: {\n    x: -300,\n    opacity: 0,\n  },\n  onscreen: {\n    x: 0,\n    opacity: 1,\n    transition: { type: 'spring' },\n    bounce: 0.2,\n    duration: 1,\n  },\n};\nconst WorkersListMainInfo = ({ workers }) => {\n  console.log(`${workers[0].photo}`);\n  console.log(window.location.origin);\n  return (\n    <Section\n      initial={'offscreen'}\n      animate={'onscreen'}\n      transition={{ staggerChildren: 0.1 }}\n    >\n      <Container>\n        <Title variants={TextAnimation}>Спеціалісти клініки Eva</Title>\n        <List>\n          {workers && (\n            <>\n              {workers.map((worker, index) => (\n                <Item\n                  key={worker.id}\n                  style={{ transform: worker.id % 2 === 0 && 'scaleX(-1)' }}\n                  initial={'offscreen'}\n                  whileInView={'onscreen'}\n                  viewport={{ once: true, amount: 0.5 }}\n                  transition={{ staggerChildren: 0.7 }}\n                >\n                  <motion.div>\n                    <WrapperPhotoInfo>\n                      <Photo\n                        src={process.env.PUBLIC_URL + `${worker.photo}`}\n                        alt=\"photo of worker\"\n                        variants={TextAnimation}\n                      />\n                      <WrapperTextInfo\n                        style={{\n                          transform:\n                            worker.id % 2 === 0 &&\n                            'translate(92%, -50%) scaleX(-1)',\n                        }}\n                      >\n                        <motion.div\n                          variants={\n                            worker.id % 2 !== 0\n                              ? TextAnimation1\n                              : TextAnimation2\n                          }\n                        >\n                          <FullNameText>{worker.fullName}</FullNameText>\n                          <MainInfoText>{worker.mainInfo}</MainInfoText>\n                          <div\n                            style={{\n                              borderTop: '1px solid rgb(255 255 255 / 80%)',\n                            }}\n                          ></div>\n                          <ExperienceText\n                            style={{\n                              textAlign: worker.id % 2 === 0 && 'start',\n                            }}\n                          >\n                            {worker.experience} досвіду.\n                          </ExperienceText>\n                        </motion.div>\n                        <motion.div\n                          variants={\n                            worker.id % 2 !== 0\n                              ? TextAnimation1\n                              : TextAnimation2\n                          }\n                        >\n                          <LinkToDetailInfo to={`${worker.id}`}>\n                            Link to detail\n                          </LinkToDetailInfo>\n                        </motion.div>\n                      </WrapperTextInfo>\n                    </WrapperPhotoInfo>\n                  </motion.div>\n                </Item>\n              ))}\n            </>\n          )}\n        </List>\n      </Container>\n    </Section>\n  );\n};\n\nexport default WorkersListMainInfo;\n\n// <Item>\n//   <WrapperPhotoInfo>\n//     <Photo src={photo_Malesh} width=\"500px\" alt=\"photo of worker\" />\n//     <WrapperTextInfo>\n//       <FullNameText>asd</FullNameText>\n//       <MainInfoText>asdfasdfasdfasdf</MainInfoText>\n//       <ExperienceText>1 year</ExperienceText>\n//       <LinkToDetailInfo>Link to detail</LinkToDetailInfo>\n//     </WrapperTextInfo>\n//   </WrapperPhotoInfo>\n// </Item>\n","import styled from 'styled-components';\nimport { workers_img } from 'media';\n\nexport const SectionWithBackground = styled.section`\n  padding-top: 120px;\n  padding-bottom: 60px;\n  background-image: url(${workers_img});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  overflow: hidden;\n  height: 80vh;\n`;\n\nexport const Section = styled.section`\n  background-color: ${p => p.theme.colors.backgroundThird};\n  padding-top: 40px;\n  padding-bottom: 150px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 900;\n  letter-spacing: 1.4px;\n  color: white;\n  text-align: left;\n`;\n\nexport const WrapperMain = styled.div``;\nexport const WrapperTextInfo = styled.div``;\nexport const WrapperPhotoInfo = styled.div``;\nexport const Photo = styled.img``;\n","import { Container } from 'styles/Container-styled';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport WorkersListMainInfo from './WorkersListMailInfo/WorkersListMainInfo';\n\nimport { SectionWithBackground } from './Workers-styled';\nconst Workers = () => {\n  const [workersList, setWorkersList] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // setLoading(true);\n        const response = await axios.get('workersData.json');\n        const data = response.data;\n        setWorkersList(data);\n        // setLoading(false);\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <SectionWithBackground>\n        <Container></Container>\n      </SectionWithBackground>\n      {workersList && <WorkersListMainInfo workers={workersList} />}\n    </>\n  );\n};\n\nexport default Workers;\n","import Workers from 'components/Workers/Workers';\n\nconst MentorsPage = () => {\n  return (\n    <>\n      <Workers />\n    </>\n  );\n};\n\nexport default MentorsPage;\n"],"names":["Section","styled","motion","p","theme","colors","backgroundThird","Title","List","Item","WrapperTextInfo","WrapperPhotoInfo","FullNameText","MainInfoText","ExperienceText","LinkToDetailInfo","Link","backgroundSecond","backgroundMain","Photo","TextAnimation","offscreen","y","opacity","onscreen","transition","type","bounce","duration","TextAnimation1","x","TextAnimation2","workers","console","log","photo","window","location","origin","initial","animate","staggerChildren","variants","map","worker","index","style","transform","id","whileInView","viewport","once","amount","src","process","alt","fullName","mainInfo","borderTop","textAlign","experience","to","SectionWithBackground","workers_img","useState","workersList","setWorkersList","useEffect","axios","response","data","Error","fetchData"],"sourceRoot":""}